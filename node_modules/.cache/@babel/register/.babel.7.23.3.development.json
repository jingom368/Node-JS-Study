{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\MySource\\\\soom\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\MySource\\\\soom\",\"filename\":\"C:\\\\MySource\\\\soom\\\\src\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\MySource\\\\soom\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.3:development":{"value":{"code":"\"use strict\";\n\nvar _http = _interopRequireDefault(require(\"http\"));\nvar _ws = _interopRequireDefault(require(\"ws\"));\nvar _express = _interopRequireDefault(require(\"express\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n// import http from \"http\"; : Node.js의 내장 모듈인 http를 불러옵니다. 이 모듈은 HTTP 서버를 생성하는 데 사용됩니다.\n// import WebSocket from 'ws'; : WebSocket 프로토콜을 구현한 ws 모듈을 불러옵니다. WebSocket은 클라이언트와 서버 간에 실시간 양방향 통신을 가능하게 하는 프로토콜입니다.\n// import express from 'express'; : Express 모듈을 불러옵니다. Express는 Node.js를 위한 웹 애플리케이션 프레임워크입니다.\n\n// const app = express(); : Express 인스턴스를 생성하여 app 변수에 저장합니다.\nvar app = (0, _express[\"default\"])();\n\n// app.set(\"view engine\", \"pug\"); : Express 앱의 뷰 엔진을 Pug로 설정합니다. 뷰 엔진은 템플릿 파일을 렌더링하는 역할을 합니다.\n// app.set(\"views\", __dirname + \"/views\"); : Express 앱의 뷰(템플릿 파일)가 있는 디렉토리를 설정합니다. __dirname은 현재 파일의 경로를 나타내는 Node.js 전역 변수입니다.\n\n// app.use() : Express 미들웨어를 등록하는 메서드입니다. 미들웨어는 요청과 응답 사이에 위치하여 요청이 들어올 때마다 실행되는 함수입니다.\n//     \"/public\" : 이는 라우트의 경로를 지정합니다. 이 코드에서는 \"/public\" 경로로 들어오는 요청에 대해 미들웨어를 적용하겠다는 의미입니다.\n// express.static(__dirname+\"/public\") : express.static은 Express가 제공하는 빌트인 미들웨어로, 정적 파일을 제공하는 역할을 합니다. \n//     이 코드에서는 __dirname+\"/public\" 경로에 있는 정적 파일(이미지, CSS 파일, JavaScript 파일 등)을 \"/public\" 경로로 접근할 수 있도록 설정하고 있습니다\n\n// app.get(\"/\", (req,res) => res.render(\"home\")); : 루트 URL('/')에 GET 요청이 들어오면 home 템플릿을 렌더링하여 응답합니다. req는 요청 객체, res는 응답 객체를 나타냅니다.\n// app.get(\"/*\", (req,res) => res.redirect(\"/\")) : 루트 URL('/')를 제외한 모든 URL에 GET 요청이 들어오면 루트 URL('/')로 리다이렉트합니다.\n\napp.set(\"view engine\", \"pug\");\napp.set(\"views\", __dirname + \"/views\");\napp.use(\"/public\", _express[\"default\"][\"static\"](__dirname + \"/public\"));\napp.get(\"/\", function (req, res) {\n  return res.render(\"home\");\n});\napp.get(\"/*\", function (req, res) {\n  return res.redirect(\"/\");\n});\n\n// const handelListen = () => console.log(\"듣고 있어 http://localhost:3000\") : 서버가 3000번 포트에서 리스닝을 시작할 때 콘솔에 메시지를 출력하는 함수를 정의합니다.\n// app.listen(3000, handelListen); : Express 앱을 3000번 포트에서 시작하고, 리스닝을 시작하면 handelListen 함수를 호출합니다.\n\n// const server = http.createServer(app); : http 모듈의 createServer 메서드를 사용해 HTTP 서버를 생성하고, 이전에 정의한 Express 앱(app)을 서버에 연결합니다.\n// const wss = new  WebSocket.Server({server}); : ws 모듈의 Server 클래스를 사용해 WebSocket 서버를 생성하고, 이를 HTTP 서버에 연결합니다. \n// 이로써 HTTP와 WebSocket 요청을 동일한 포트에서 처리할 수 있게 됩니다.\n\nvar handelListen = function handelListen() {\n  return console.log(\"연결 중 http://localhost:3000\");\n};\n// app.listen(3000, handelListen);\nvar server = _http[\"default\"].createServer(app);\nvar wss = new _ws[\"default\"].Server({\n  server: server\n});\n\n// function handelConnection(socket) { console.log(socket); } : 클라이언트가 WebSocket 서버에 연결되었을 때 실행되는 콜백 함수를 정의합니다. \n//     이 함수는 연결된 클라이언트의 소켓 객체(socket)를 파라미터로 받아서 그 정보를 콘솔에 출력합니다. 이 socket 객체를 통해 연결된 클라이언트와 데이터를 주고받을 수 있습니다.\n\n// wss.on(\"connection\", handelConnection); : wss WebSocket 서버에서 \"connection\" 이벤트가 발생했을 때, 즉 클라이언트가 서버에 연결되었을 때 handelConnection 함수를 실행하도록 설정합니다.\n\n// 따라서 클라이언트가 이 WebSocket 서버에 연결을 시도하면, 서버는 이를 감지하고 handelConnection 함수를 실행하여 클라이언트 소켓의 정보를 콘솔에 출력합니다. \n//     이렇게 함으로써 서버는 어떤 클라이언트가 연결되었는지 확인할 수 있습니다.\n\n/* \r\n    function handelConnection(socket) {\r\n        console.log(socket);\r\n    } \r\n\r\n    wss.on(\"connection\", handelConnection);\r\n*/\n\n// wss.on(\"connection\", (socket) => {...}); : 이 부분은 wss WebSocket 서버에서 \"connection\" 이벤트가 발생했을 때, \n// 즉 클라이언트가 서버에 연결되었을 때 실행되는 콜백 함수를 설정하는 부분입니다. 연결된 클라이언트의 소켓 객체는 socket 파라미터로 전달됩니다.\n// \"console.log(\"socket\", socket)\"는 \"socket\"라는 문자열과 socket 객체를 별개로 출력합니다. 이 방식을 사용하면 socket 객체의 내용을 자세히 볼 수 있습니다.\n// \"console.log(\"socket\" + socket)\"는 \"socket\"라는 문자열과 socket 객체를 문자열 연결 연산자(+)를 사용하여 하나의 문자열로 만들어 출력합니다. \n//     이 경우, socket 객체가 문자열로 변환되어 출력되므로, [object Object]와 같이 출력될 수 있습니다.\n// 따라서, 객체의 내용을 자세히 보고 싶다면 \"console.log(\"socke\", socket)\" 방식을, 객체를 문자열과 함께 한 줄로 출력하고 싶다면 \"console.log(\"socke\" + socket)\" 방식을 사용하면 됩니다.\n// sockets.push(socket): 새로 연결된 웹소켓을 sockets 배열에 추가합니다.\n// console.log(\"브라우저와 연결되었습니다.\"); : 클라이언트와 연결이 성공하면 콘솔에 \"브라우저와 연결되었습니다.\"라는 메시지를 출력합니다.\n// socket.on(\"close\", () => console.log(\"서버 > 서버와 연결이 끊겼습니다.\")); : 클라이언트와의 연결이 닫혔을 때 실행되는 콜백 함수를 설정합니다. \n//     이 경우 연결이 닫히면 콘솔에 \"서버 > 서버와 연결이 끊겼습니다.\"라는 메시지를 출력합니다.\n// socket.on(\"message\", (message) => {...}) : 클라이언트로부터 메시지를 받았을 때 실행되는 콜백 함수를 설정합니다. 이 경우 메시지를 받으면 받은 메시지를 콘솔에 출력합니다.\n// const message = JSON.parse(msg): 클라이언트에서 보낸 메시지를 JSON형식으로 파싱합니다.\n// console.log([서버] : ${message});: 이 코드는 서버 측에서 실행되며, 서버의 콘솔에 \"[서버] : \"라는 문자열과 함께 클라이언트로부터 받은 메시지를 출력합니다. \n// 이는 주로 개발자가 서버에서 클라이언트로부터 어떤 메시지를 받았는지 확인하기 위해 사용됩니다.\n// socket.send([서버] : ${message});: 이 코드는 서버가 클라이언트로 메시지를 보내는 코드입니다. \"[서버] : \"라는 문자열과 함께 클라이언트로부터 받은 메시지를 그대로 클라이언트에게 보냅니다. \n// 이는 웹소켓을 통해 실시간으로 서버와 클라이언트 간의 데이터를 주고받는 데 사용됩니다.\n// sockets.forEach(aSocket => aSocket.send(${message})): sockets 배열에 있는 모든 웹소켓에 메시지를 보냅니다. 이를 통해 서버는 받은 메시지를 모든 클라이언트에게 브로드캐스팅합니다.\n\n// switch(message.type) {...} : message.type의 값에 따라 다른 코드 블록이 실행됩니다. message는 클라이언트에서 서버로 보낸 메시지를 JSON 형태로 파싱한 객체입니다.\n// case \"new_message\": : 메시지의 타입이 \"new_message\"인 경우 다음 코드를 실행합니다.\n// sockets.forEach(aSocket => aSocket.send(${socket.nickname}:${message.payload})); : 현재 연결된 모든 소켓에 메시지를 전송합니다. \n// 메시지는 보낸 사람의 닉네임과 메시지 내용을 합쳐서 전송됩니다. 여기서 socket.nickname은 메시지를 보낸 사람의 닉네임이고, message.payload는 메시지 내용입니다.\n// case \"nickname\": : 메시지의 타입이 \"nickname\"인 경우 다음 코드를 실행합니다.\n// socket[\"nickname\"] = message.payload; : 메시지를 보낸 사람의 닉네임을 message.payload로 변경합니다.\n// break; : switch 문을 빠져나옵니다. 이 키워드가 없으면, 해당 case 블록 이후의 코드도 실행됩니다.\n// 즉, 클라이언트에서 메시지 타입이 \"new_message\"로 보내면, 해당 메시지를 서버에 연결된 모든 클라이언트에게 전송하고, \n// 메시지 타입이 \"nickname\"인 경우, 메시지를 보낸 사람의 닉네임을 변경하는 작업을 수행합니다.\n\n// socket.send(\"안녕?\"); : 클라이언트와 연결이 성공하면 클라이언트에게 \"안녕?\" 메시지를 보냅니다. \n\n// server.listen(3000, handelListen); : HTTP 서버를 3000번 포트에서 시작하고, 리스닝을 시작하면 handelListen 함수를 호출합니다.\n\nvar sockets = [];\nwss.on(\"connection\", function (socket) {\n  console.log(\"socket\", socket);\n  console.log(\"socket\" + socket);\n  sockets.push(socket);\n  socket[\"nickname\"] = \"익명\";\n  console.log(\"브라우저와 연결되었습니다.\");\n  socket.on(\"close\", function () {\n    return console.log(\"서버 > 서버와 연결이 끊겼습니다.\");\n  });\n  socket.on(\"message\", function (msg) {\n    var message = JSON.parse(msg);\n    console.log(message.type, message.payload); // 클라이언트에서 받은 JSON 타입의 key값을 받아서 value를 반환\n    // console.log(`[서버] : ${message}`); // 클라이언트에서 받은 메세지\n    // socket.send(`[서버] : ${message}`); // 클라이언트에서 받은 메세지를 클라이언트로 보내는 메시지\n    // sockets.forEach(aSocket => aSocket.send(`${message}`)); // 클라이언트에서 받은 메세지를 소켓에 연결된 모든 클라이언트로 보내는 메세지\n\n    switch (message.type) {\n      case \"new_message\":\n        // sockets.forEach(aSocket => aSocket.send(`${message.payload}`));\n        sockets.forEach(function (aSocket) {\n          return aSocket.send(\"\".concat(socket.nickname, \":\").concat(message.payload));\n        });\n        break;\n      case \"nickname\":\n        socket[\"nickname\"] = message.payload;\n        break;\n    }\n  });\n  // socket.send(\"안녕?\"); // 클라이언트로 보내는 메세지\n});\n\nserver.listen(3000, handelListen);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_http","_interopRequireDefault","require","_ws","_express","obj","__esModule","app","express","set","__dirname","use","get","req","res","render","redirect","handelListen","console","log","server","http","createServer","wss","WebSocket","Server","sockets","on","socket","push","msg","message","JSON","parse","type","payload","forEach","aSocket","send","concat","nickname","listen"],"sourceRoot":"C:\\MySource\\soom\\src\\","sources":["server.js"],"sourcesContent":["// import http from \"http\"; : Node.js의 내장 모듈인 http를 불러옵니다. 이 모듈은 HTTP 서버를 생성하는 데 사용됩니다.\r\n// import WebSocket from 'ws'; : WebSocket 프로토콜을 구현한 ws 모듈을 불러옵니다. WebSocket은 클라이언트와 서버 간에 실시간 양방향 통신을 가능하게 하는 프로토콜입니다.\r\n// import express from 'express'; : Express 모듈을 불러옵니다. Express는 Node.js를 위한 웹 애플리케이션 프레임워크입니다.\r\nimport http from \"http\";\r\nimport WebSocket from 'ws';\r\nimport express from 'express';\r\n\r\n// const app = express(); : Express 인스턴스를 생성하여 app 변수에 저장합니다.\r\nconst app = express();\r\n\r\n\r\n// app.set(\"view engine\", \"pug\"); : Express 앱의 뷰 엔진을 Pug로 설정합니다. 뷰 엔진은 템플릿 파일을 렌더링하는 역할을 합니다.\r\n// app.set(\"views\", __dirname + \"/views\"); : Express 앱의 뷰(템플릿 파일)가 있는 디렉토리를 설정합니다. __dirname은 현재 파일의 경로를 나타내는 Node.js 전역 변수입니다.\r\n\r\n// app.use() : Express 미들웨어를 등록하는 메서드입니다. 미들웨어는 요청과 응답 사이에 위치하여 요청이 들어올 때마다 실행되는 함수입니다.\r\n//     \"/public\" : 이는 라우트의 경로를 지정합니다. 이 코드에서는 \"/public\" 경로로 들어오는 요청에 대해 미들웨어를 적용하겠다는 의미입니다.\r\n// express.static(__dirname+\"/public\") : express.static은 Express가 제공하는 빌트인 미들웨어로, 정적 파일을 제공하는 역할을 합니다. \r\n//     이 코드에서는 __dirname+\"/public\" 경로에 있는 정적 파일(이미지, CSS 파일, JavaScript 파일 등)을 \"/public\" 경로로 접근할 수 있도록 설정하고 있습니다\r\n\r\n// app.get(\"/\", (req,res) => res.render(\"home\")); : 루트 URL('/')에 GET 요청이 들어오면 home 템플릿을 렌더링하여 응답합니다. req는 요청 객체, res는 응답 객체를 나타냅니다.\r\n// app.get(\"/*\", (req,res) => res.redirect(\"/\")) : 루트 URL('/')를 제외한 모든 URL에 GET 요청이 들어오면 루트 URL('/')로 리다이렉트합니다.\r\n\r\napp.set(\"view engine\", \"pug\");\r\napp.set(\"views\", __dirname + \"/views\");\r\n\r\napp.use(\"/public\", express.static(__dirname + \"/public\"));\r\n\r\napp.get(\"/\", (req,res) => res.render(\"home\"));\r\napp.get(\"/*\", (req,res) => res.redirect(\"/\"));\r\n\r\n\r\n// const handelListen = () => console.log(\"듣고 있어 http://localhost:3000\") : 서버가 3000번 포트에서 리스닝을 시작할 때 콘솔에 메시지를 출력하는 함수를 정의합니다.\r\n// app.listen(3000, handelListen); : Express 앱을 3000번 포트에서 시작하고, 리스닝을 시작하면 handelListen 함수를 호출합니다.\r\n\r\n// const server = http.createServer(app); : http 모듈의 createServer 메서드를 사용해 HTTP 서버를 생성하고, 이전에 정의한 Express 앱(app)을 서버에 연결합니다.\r\n// const wss = new  WebSocket.Server({server}); : ws 모듈의 Server 클래스를 사용해 WebSocket 서버를 생성하고, 이를 HTTP 서버에 연결합니다. \r\n// 이로써 HTTP와 WebSocket 요청을 동일한 포트에서 처리할 수 있게 됩니다.\r\n\r\nconst handelListen = () => console.log(\"연결 중 http://localhost:3000\");\r\n// app.listen(3000, handelListen);\r\nconst server = http.createServer(app);\r\nconst wss = new WebSocket.Server({server});\r\n\r\n\r\n// function handelConnection(socket) { console.log(socket); } : 클라이언트가 WebSocket 서버에 연결되었을 때 실행되는 콜백 함수를 정의합니다. \r\n//     이 함수는 연결된 클라이언트의 소켓 객체(socket)를 파라미터로 받아서 그 정보를 콘솔에 출력합니다. 이 socket 객체를 통해 연결된 클라이언트와 데이터를 주고받을 수 있습니다.\r\n\r\n// wss.on(\"connection\", handelConnection); : wss WebSocket 서버에서 \"connection\" 이벤트가 발생했을 때, 즉 클라이언트가 서버에 연결되었을 때 handelConnection 함수를 실행하도록 설정합니다.\r\n\r\n// 따라서 클라이언트가 이 WebSocket 서버에 연결을 시도하면, 서버는 이를 감지하고 handelConnection 함수를 실행하여 클라이언트 소켓의 정보를 콘솔에 출력합니다. \r\n//     이렇게 함으로써 서버는 어떤 클라이언트가 연결되었는지 확인할 수 있습니다.\r\n\r\n/* \r\n    function handelConnection(socket) {\r\n        console.log(socket);\r\n    } \r\n\r\n    wss.on(\"connection\", handelConnection);\r\n*/\r\n\r\n\r\n// wss.on(\"connection\", (socket) => {...}); : 이 부분은 wss WebSocket 서버에서 \"connection\" 이벤트가 발생했을 때, \r\n// 즉 클라이언트가 서버에 연결되었을 때 실행되는 콜백 함수를 설정하는 부분입니다. 연결된 클라이언트의 소켓 객체는 socket 파라미터로 전달됩니다.\r\n    // \"console.log(\"socket\", socket)\"는 \"socket\"라는 문자열과 socket 객체를 별개로 출력합니다. 이 방식을 사용하면 socket 객체의 내용을 자세히 볼 수 있습니다.\r\n    // \"console.log(\"socket\" + socket)\"는 \"socket\"라는 문자열과 socket 객체를 문자열 연결 연산자(+)를 사용하여 하나의 문자열로 만들어 출력합니다. \r\n    //     이 경우, socket 객체가 문자열로 변환되어 출력되므로, [object Object]와 같이 출력될 수 있습니다.\r\n    // 따라서, 객체의 내용을 자세히 보고 싶다면 \"console.log(\"socke\", socket)\" 방식을, 객체를 문자열과 함께 한 줄로 출력하고 싶다면 \"console.log(\"socke\" + socket)\" 방식을 사용하면 됩니다.\r\n    // sockets.push(socket): 새로 연결된 웹소켓을 sockets 배열에 추가합니다.\r\n    // console.log(\"브라우저와 연결되었습니다.\"); : 클라이언트와 연결이 성공하면 콘솔에 \"브라우저와 연결되었습니다.\"라는 메시지를 출력합니다.\r\n    // socket.on(\"close\", () => console.log(\"서버 > 서버와 연결이 끊겼습니다.\")); : 클라이언트와의 연결이 닫혔을 때 실행되는 콜백 함수를 설정합니다. \r\n    //     이 경우 연결이 닫히면 콘솔에 \"서버 > 서버와 연결이 끊겼습니다.\"라는 메시지를 출력합니다.\r\n    // socket.on(\"message\", (message) => {...}) : 클라이언트로부터 메시지를 받았을 때 실행되는 콜백 함수를 설정합니다. 이 경우 메시지를 받으면 받은 메시지를 콘솔에 출력합니다.\r\n        // const message = JSON.parse(msg): 클라이언트에서 보낸 메시지를 JSON형식으로 파싱합니다.\r\n        // console.log([서버] : ${message});: 이 코드는 서버 측에서 실행되며, 서버의 콘솔에 \"[서버] : \"라는 문자열과 함께 클라이언트로부터 받은 메시지를 출력합니다. \r\n        // 이는 주로 개발자가 서버에서 클라이언트로부터 어떤 메시지를 받았는지 확인하기 위해 사용됩니다.\r\n        // socket.send([서버] : ${message});: 이 코드는 서버가 클라이언트로 메시지를 보내는 코드입니다. \"[서버] : \"라는 문자열과 함께 클라이언트로부터 받은 메시지를 그대로 클라이언트에게 보냅니다. \r\n        // 이는 웹소켓을 통해 실시간으로 서버와 클라이언트 간의 데이터를 주고받는 데 사용됩니다.\r\n        // sockets.forEach(aSocket => aSocket.send(${message})): sockets 배열에 있는 모든 웹소켓에 메시지를 보냅니다. 이를 통해 서버는 받은 메시지를 모든 클라이언트에게 브로드캐스팅합니다.\r\n\r\n        // switch(message.type) {...} : message.type의 값에 따라 다른 코드 블록이 실행됩니다. message는 클라이언트에서 서버로 보낸 메시지를 JSON 형태로 파싱한 객체입니다.\r\n        // case \"new_message\": : 메시지의 타입이 \"new_message\"인 경우 다음 코드를 실행합니다.\r\n        // sockets.forEach(aSocket => aSocket.send(${socket.nickname}:${message.payload})); : 현재 연결된 모든 소켓에 메시지를 전송합니다. \r\n        // 메시지는 보낸 사람의 닉네임과 메시지 내용을 합쳐서 전송됩니다. 여기서 socket.nickname은 메시지를 보낸 사람의 닉네임이고, message.payload는 메시지 내용입니다.\r\n        // case \"nickname\": : 메시지의 타입이 \"nickname\"인 경우 다음 코드를 실행합니다.\r\n        // socket[\"nickname\"] = message.payload; : 메시지를 보낸 사람의 닉네임을 message.payload로 변경합니다.\r\n        // break; : switch 문을 빠져나옵니다. 이 키워드가 없으면, 해당 case 블록 이후의 코드도 실행됩니다.\r\n        // 즉, 클라이언트에서 메시지 타입이 \"new_message\"로 보내면, 해당 메시지를 서버에 연결된 모든 클라이언트에게 전송하고, \r\n        // 메시지 타입이 \"nickname\"인 경우, 메시지를 보낸 사람의 닉네임을 변경하는 작업을 수행합니다.\r\n   \r\n    // socket.send(\"안녕?\"); : 클라이언트와 연결이 성공하면 클라이언트에게 \"안녕?\" 메시지를 보냅니다. \r\n\r\n// server.listen(3000, handelListen); : HTTP 서버를 3000번 포트에서 시작하고, 리스닝을 시작하면 handelListen 함수를 호출합니다.\r\n\r\nconst sockets = [];\r\n\r\nwss.on(\"connection\", (socket) => {\r\n    console.log(\"socket\", socket);\r\n    console.log(\"socket\" + socket);\r\n    sockets.push(socket);\r\n    socket[\"nickname\"] = \"익명\"; \r\n    console.log(\"브라우저와 연결되었습니다.\");\r\n    socket.on(\"close\", () => console.log(\"서버 > 서버와 연결이 끊겼습니다.\"));\r\n    socket.on(\"message\", (msg) => { \r\n        const message = JSON.parse(msg);\r\n        console.log(message.type, message.payload); // 클라이언트에서 받은 JSON 타입의 key값을 받아서 value를 반환\r\n        // console.log(`[서버] : ${message}`); // 클라이언트에서 받은 메세지\r\n        // socket.send(`[서버] : ${message}`); // 클라이언트에서 받은 메세지를 클라이언트로 보내는 메시지\r\n        // sockets.forEach(aSocket => aSocket.send(`${message}`)); // 클라이언트에서 받은 메세지를 소켓에 연결된 모든 클라이언트로 보내는 메세지\r\n\r\n        switch(message.type) {\r\n            case \"new_message\":\r\n                // sockets.forEach(aSocket => aSocket.send(`${message.payload}`));\r\n                sockets.forEach(aSocket => aSocket.send(`${socket.nickname}:${message.payload}`));\r\n                break;\r\n            case \"nickname\":\r\n                socket[\"nickname\"] = message.payload\r\n                break;                \r\n        }\r\n    })\r\n    // socket.send(\"안녕?\"); // 클라이언트로 보내는 메세지\r\n});\r\n\r\nserver.listen(3000, handelListen);"],"mappings":"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"}},"mtime":1701158255108}}