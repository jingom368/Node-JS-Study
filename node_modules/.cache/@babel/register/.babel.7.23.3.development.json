{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\MySource\\\\soom\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\MySource\\\\soom\",\"filename\":\"C:\\\\MySource\\\\soom\\\\src\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\MySource\\\\soom\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.3:development":{"value":{"code":"\"use strict\";\n\nvar _http = _interopRequireDefault(require(\"http\"));\nvar _ws = _interopRequireDefault(require(\"ws\"));\nvar _express = _interopRequireDefault(require(\"express\"));\nvar _socket = _interopRequireDefault(require(\"socket.io\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n// import http from \"http\"; : Node.js의 내장 모듈인 http를 불러옵니다. 이 모듈은 HTTP 서버를 생성하는 데 사용됩니다.\n// import WebSocket from 'ws'; : WebSocket 프로토콜을 구현한 ws 모듈을 불러옵니다. WebSocket은 클라이언트와 서버 간에 실시간 양방향 통신을 가능하게 하는 프로토콜입니다.\n// import express from 'express'; : Express 모듈을 불러옵니다. Express는 Node.js를 위한 웹 애플리케이션 프레임워크입니다.\n\n// const app = express(); : Express 인스턴스를 생성하여 app 변수에 저장합니다.\nvar app = (0, _express[\"default\"])();\n\n// app.set(\"view engine\", \"pug\"); : Express 앱의 뷰 엔진을 Pug로 설정합니다. 뷰 엔진은 템플릿 파일을 렌더링하는 역할을 합니다.\n// app.set(\"views\", __dirname + \"/views\"); : Express 앱의 뷰(템플릿 파일)가 있는 디렉토리를 설정합니다. __dirname은 현재 파일의 경로를 나타내는 Node.js 전역 변수입니다.\n\n// app.use() : Express 미들웨어를 등록하는 메서드입니다. 미들웨어는 요청과 응답 사이에 위치하여 요청이 들어올 때마다 실행되는 함수입니다.\n//     \"/public\" : 이는 라우트의 경로를 지정합니다. 이 코드에서는 \"/public\" 경로로 들어오는 요청에 대해 미들웨어를 적용하겠다는 의미입니다.\n// express.static(__dirname+\"/public\") : express.static은 Express가 제공하는 빌트인 미들웨어로, 정적 파일을 제공하는 역할을 합니다. \n//     이 코드에서는 __dirname+\"/public\" 경로에 있는 정적 파일(이미지, CSS 파일, JavaScript 파일 등)을 \"/public\" 경로로 접근할 수 있도록 설정하고 있습니다\n\n// app.get(\"/\", (req,res) => res.render(\"home\")); : 루트 URL('/')에 GET 요청이 들어오면 home 템플릿을 렌더링하여 응답합니다. req는 요청 객체, res는 응답 객체를 나타냅니다.\n// app.get(\"/*\", (req,res) => res.redirect(\"/\")) : 루트 URL('/')를 제외한 모든 URL에 GET 요청이 들어오면 루트 URL('/')로 리다이렉트합니다.\n\napp.set(\"view engine\", \"pug\");\napp.set(\"views\", __dirname + \"/views\");\napp.use(\"/public\", _express[\"default\"][\"static\"](__dirname + \"/public\"));\napp.get(\"/\", function (req, res) {\n  return res.render(\"home\");\n});\napp.get(\"/*\", function (req, res) {\n  return res.redirect(\"/\");\n});\n\n// const handelListen = () => console.log(\"듣고 있어 http://localhost:3000\") : 서버가 3000번 포트에서 리스닝을 시작할 때 콘솔에 메시지를 출력하는 함수를 정의합니다.\n// app.listen(3000, handelListen); : Express 앱을 3000번 포트에서 시작하고, 리스닝을 시작하면 handelListen 함수를 호출합니다.\n\n// const server = http.createServer(app); : http 모듈의 createServer 메서드를 사용해 HTTP 서버를 생성하고, 이전에 정의한 Express 앱(app)을 서버에 연결합니다.\n// const wss = new  WebSocket.Server({server}); : ws 모듈의 Server 클래스를 사용해 WebSocket 서버를 생성하고, 이를 HTTP 서버에 연결합니다. \n// 이로써 HTTP와 WebSocket 요청을 동일한 포트에서 처리할 수 있게 됩니다.\n\nvar handelListen = function handelListen() {\n  return console.log(\"연결 중 http://localhost:3000\");\n};\n// app.listen(3000, handelListen);\nvar server = _http[\"default\"].createServer(app);\nvar wss = new _ws[\"default\"].Server({\n  server: server\n});\n\n// function handelConnection(socket) { console.log(socket); } : 클라이언트가 WebSocket 서버에 연결되었을 때 실행되는 콜백 함수를 정의합니다. \n//     이 함수는 연결된 클라이언트의 소켓 객체(socket)를 파라미터로 받아서 그 정보를 콘솔에 출력합니다. 이 socket 객체를 통해 연결된 클라이언트와 데이터를 주고받을 수 있습니다.\n\n// wss.on(\"connection\", handelConnection); : wss WebSocket 서버에서 \"connection\" 이벤트가 발생했을 때, 즉 클라이언트가 서버에 연결되었을 때 handelConnection 함수를 실행하도록 설정합니다.\n\n// 따라서 클라이언트가 이 WebSocket 서버에 연결을 시도하면, 서버는 이를 감지하고 handelConnection 함수를 실행하여 클라이언트 소켓의 정보를 콘솔에 출력합니다. \n//     이렇게 함으로써 서버는 어떤 클라이언트가 연결되었는지 확인할 수 있습니다.\n\n/* \r\n    function handelConnection(socket) {\r\n        console.log(socket);\r\n    } \r\n\r\n    wss.on(\"connection\", handelConnection);\r\n*/\n\n// wss.on(\"connection\", (socket) => {...}); : 이 부분은 wss WebSocket 서버에서 \"connection\" 이벤트가 발생했을 때, \n// 즉 클라이언트가 서버에 연결되었을 때 실행되는 콜백 함수를 설정하는 부분입니다. 연결된 클라이언트의 소켓 객체는 socket 파라미터로 전달됩니다.\n// \"console.log(\"socket\", socket)\"는 \"socket\"라는 문자열과 socket 객체를 별개로 출력합니다. 이 방식을 사용하면 socket 객체의 내용을 자세히 볼 수 있습니다.\n// \"console.log(\"socket\" + socket)\"는 \"socket\"라는 문자열과 socket 객체를 문자열 연결 연산자(+)를 사용하여 하나의 문자열로 만들어 출력합니다. \n//     이 경우, socket 객체가 문자열로 변환되어 출력되므로, [object Object]와 같이 출력될 수 있습니다.\n// 따라서, 객체의 내용을 자세히 보고 싶다면 \"console.log(\"socke\", socket)\" 방식을, 객체를 문자열과 함께 한 줄로 출력하고 싶다면 \"console.log(\"socke\" + socket)\" 방식을 사용하면 됩니다.\n// sockets.push(socket): 새로 연결된 웹소켓을 sockets 배열에 추가합니다.\n// console.log(\"브라우저와 연결되었습니다.\"); : 클라이언트와 연결이 성공하면 콘솔에 \"브라우저와 연결되었습니다.\"라는 메시지를 출력합니다.\n// socket.on(\"close\", () => console.log(\"서버 > 서버와 연결이 끊겼습니다.\")); : 클라이언트와의 연결이 닫혔을 때 실행되는 콜백 함수를 설정합니다. \n//     이 경우 연결이 닫히면 콘솔에 \"서버 > 서버와 연결이 끊겼습니다.\"라는 메시지를 출력합니다.\n// socket.on(\"message\", (message) => {...}) : 클라이언트로부터 메시지를 받았을 때 실행되는 콜백 함수를 설정합니다. 이 경우 메시지를 받으면 받은 메시지를 콘솔에 출력합니다.\n// const message = JSON.parse(msg): 클라이언트에서 보낸 메시지를 JSON형식으로 파싱합니다.\n// console.log([서버] : ${message});: 이 코드는 서버 측에서 실행되며, 서버의 콘솔에 \"[서버] : \"라는 문자열과 함께 클라이언트로부터 받은 메시지를 출력합니다. \n// 이는 주로 개발자가 서버에서 클라이언트로부터 어떤 메시지를 받았는지 확인하기 위해 사용됩니다.\n// socket.send([서버] : ${message});: 이 코드는 서버가 클라이언트로 메시지를 보내는 코드입니다. \"[서버] : \"라는 문자열과 함께 클라이언트로부터 받은 메시지를 그대로 클라이언트에게 보냅니다. \n// 이는 웹소켓을 통해 실시간으로 서버와 클라이언트 간의 데이터를 주고받는 데 사용됩니다.\n// sockets.forEach(aSocket => aSocket.send(${message})): sockets 배열에 있는 모든 웹소켓에 메시지를 보냅니다. 이를 통해 서버는 받은 메시지를 모든 클라이언트에게 브로드캐스팅합니다.\n\n// switch(message.type) {...} : message.type의 값에 따라 다른 코드 블록이 실행됩니다. message는 클라이언트에서 서버로 보낸 메시지를 JSON 형태로 파싱한 객체입니다.\n// case \"new_message\": : 메시지의 타입이 \"new_message\"인 경우 다음 코드를 실행합니다.\n// sockets.forEach(aSocket => aSocket.send(${socket.nickname}:${message.payload})); : 현재 연결된 모든 소켓에 메시지를 전송합니다. \n// 메시지는 보낸 사람의 닉네임과 메시지 내용을 합쳐서 전송됩니다. 여기서 socket.nickname은 메시지를 보낸 사람의 닉네임이고, message.payload는 메시지 내용입니다.\n// case \"nickname\": : 메시지의 타입이 \"nickname\"인 경우 다음 코드를 실행합니다.\n// socket[\"nickname\"] = message.payload; : 메시지를 보낸 사람의 닉네임을 message.payload로 변경합니다.\n// break; : switch 문을 빠져나옵니다. 이 키워드가 없으면, 해당 case 블록 이후의 코드도 실행됩니다.\n// 즉, 클라이언트에서 메시지 타입이 \"new_message\"로 보내면, 해당 메시지를 서버에 연결된 모든 클라이언트에게 전송하고, \n// 메시지 타입이 \"nickname\"인 경우, 메시지를 보낸 사람의 닉네임을 변경하는 작업을 수행합니다.\n\n// socket.send(\"안녕?\"); : 클라이언트와 연결이 성공하면 클라이언트에게 \"안녕?\" 메시지를 보냅니다. \n\n// server.listen(3000, handelListen); : HTTP 서버를 3000번 포트에서 시작하고, 리스닝을 시작하면 handelListen 함수를 호출합니다.\n\nvar sockets = [];\nwss.on(\"connection\", function (socket) {\n  console.log(\"socket\", socket);\n  console.log(\"socket\" + socket);\n  sockets.push(socket);\n  socket[\"nickname\"] = \"익명\";\n  console.log(\"브라우저와 연결되었습니다.\");\n  socket.on(\"close\", function () {\n    return console.log(\"서버 > 서버와 연결이 끊겼습니다.\");\n  });\n  socket.on(\"message\", function (msg) {\n    var message = JSON.parse(msg);\n    console.log(message.type, message.payload); // 클라이언트에서 받은 JSON 타입의 key값을 받아서 value를 반환\n    // console.log(`[서버] : ${message}`); // 클라이언트에서 받은 메세지\n    // socket.send(`[서버] : ${message}`); // 클라이언트에서 받은 메세지를 클라이언트로 보내는 메시지\n    // sockets.forEach(aSocket => aSocket.send(`${message}`)); // 클라이언트에서 받은 메세지를 소켓에 연결된 모든 클라이언트로 보내는 메세지\n\n    switch (message.type) {\n      case \"new_message\":\n        // sockets.forEach(aSocket => aSocket.send(`${message.payload}`));\n        sockets.forEach(function (aSocket) {\n          return aSocket.send(\"\".concat(socket.nickname, \":\").concat(message.payload));\n        });\n        break;\n      case \"nickname\":\n        socket[\"nickname\"] = message.payload;\n        break;\n    }\n  });\n  // socket.send(\"안녕?\"); // 클라이언트로 보내는 메세지\n});\n\nserver.listen(3000, handelListen);\nwsServer.on(\"connetction\", function (socket) {\n  console.log(socket);\n  socket.on(\"enter_room\", function (roomName) {\n    return console.log(roomName);\n  });\n});\nvar httpServer = _http[\"default\"].createServer(app);\nvar wsServer = (0, _socket[\"default\"])(httpServer);\nvar handelListen1 = function handelListen1() {\n  return console.log(\"listening on http://localhost:3000\");\n};\nhttpServer.listen(3000, handelListen1);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_http","_interopRequireDefault","require","_ws","_express","_socket","obj","__esModule","app","express","set","__dirname","use","get","req","res","render","redirect","handelListen","console","log","server","http","createServer","wss","WebSocket","Server","sockets","on","socket","push","msg","message","JSON","parse","type","payload","forEach","aSocket","send","concat","nickname","listen","wsServer","roomName","httpServer","SocketIO","handelListen1"],"sourceRoot":"C:\\MySource\\soom\\src\\","sources":["server.js"],"sourcesContent":["// import http from \"http\"; : Node.js의 내장 모듈인 http를 불러옵니다. 이 모듈은 HTTP 서버를 생성하는 데 사용됩니다.\r\n// import WebSocket from 'ws'; : WebSocket 프로토콜을 구현한 ws 모듈을 불러옵니다. WebSocket은 클라이언트와 서버 간에 실시간 양방향 통신을 가능하게 하는 프로토콜입니다.\r\n// import express from 'express'; : Express 모듈을 불러옵니다. Express는 Node.js를 위한 웹 애플리케이션 프레임워크입니다.\r\nimport http from \"http\";\r\nimport WebSocket from 'ws';\r\nimport express from 'express';\r\n\r\n// const app = express(); : Express 인스턴스를 생성하여 app 변수에 저장합니다.\r\nconst app = express();\r\n\r\n\r\n// app.set(\"view engine\", \"pug\"); : Express 앱의 뷰 엔진을 Pug로 설정합니다. 뷰 엔진은 템플릿 파일을 렌더링하는 역할을 합니다.\r\n// app.set(\"views\", __dirname + \"/views\"); : Express 앱의 뷰(템플릿 파일)가 있는 디렉토리를 설정합니다. __dirname은 현재 파일의 경로를 나타내는 Node.js 전역 변수입니다.\r\n\r\n// app.use() : Express 미들웨어를 등록하는 메서드입니다. 미들웨어는 요청과 응답 사이에 위치하여 요청이 들어올 때마다 실행되는 함수입니다.\r\n//     \"/public\" : 이는 라우트의 경로를 지정합니다. 이 코드에서는 \"/public\" 경로로 들어오는 요청에 대해 미들웨어를 적용하겠다는 의미입니다.\r\n// express.static(__dirname+\"/public\") : express.static은 Express가 제공하는 빌트인 미들웨어로, 정적 파일을 제공하는 역할을 합니다. \r\n//     이 코드에서는 __dirname+\"/public\" 경로에 있는 정적 파일(이미지, CSS 파일, JavaScript 파일 등)을 \"/public\" 경로로 접근할 수 있도록 설정하고 있습니다\r\n\r\n// app.get(\"/\", (req,res) => res.render(\"home\")); : 루트 URL('/')에 GET 요청이 들어오면 home 템플릿을 렌더링하여 응답합니다. req는 요청 객체, res는 응답 객체를 나타냅니다.\r\n// app.get(\"/*\", (req,res) => res.redirect(\"/\")) : 루트 URL('/')를 제외한 모든 URL에 GET 요청이 들어오면 루트 URL('/')로 리다이렉트합니다.\r\n\r\napp.set(\"view engine\", \"pug\");\r\napp.set(\"views\", __dirname + \"/views\");\r\n\r\napp.use(\"/public\", express.static(__dirname + \"/public\"));\r\n\r\napp.get(\"/\", (req,res) => res.render(\"home\"));\r\napp.get(\"/*\", (req,res) => res.redirect(\"/\"));\r\n\r\n\r\n// const handelListen = () => console.log(\"듣고 있어 http://localhost:3000\") : 서버가 3000번 포트에서 리스닝을 시작할 때 콘솔에 메시지를 출력하는 함수를 정의합니다.\r\n// app.listen(3000, handelListen); : Express 앱을 3000번 포트에서 시작하고, 리스닝을 시작하면 handelListen 함수를 호출합니다.\r\n\r\n// const server = http.createServer(app); : http 모듈의 createServer 메서드를 사용해 HTTP 서버를 생성하고, 이전에 정의한 Express 앱(app)을 서버에 연결합니다.\r\n// const wss = new  WebSocket.Server({server}); : ws 모듈의 Server 클래스를 사용해 WebSocket 서버를 생성하고, 이를 HTTP 서버에 연결합니다. \r\n// 이로써 HTTP와 WebSocket 요청을 동일한 포트에서 처리할 수 있게 됩니다.\r\n\r\nconst handelListen = () => console.log(\"연결 중 http://localhost:3000\");\r\n// app.listen(3000, handelListen);\r\nconst server = http.createServer(app);\r\nconst wss = new WebSocket.Server({server});\r\n\r\n\r\n// function handelConnection(socket) { console.log(socket); } : 클라이언트가 WebSocket 서버에 연결되었을 때 실행되는 콜백 함수를 정의합니다. \r\n//     이 함수는 연결된 클라이언트의 소켓 객체(socket)를 파라미터로 받아서 그 정보를 콘솔에 출력합니다. 이 socket 객체를 통해 연결된 클라이언트와 데이터를 주고받을 수 있습니다.\r\n\r\n// wss.on(\"connection\", handelConnection); : wss WebSocket 서버에서 \"connection\" 이벤트가 발생했을 때, 즉 클라이언트가 서버에 연결되었을 때 handelConnection 함수를 실행하도록 설정합니다.\r\n\r\n// 따라서 클라이언트가 이 WebSocket 서버에 연결을 시도하면, 서버는 이를 감지하고 handelConnection 함수를 실행하여 클라이언트 소켓의 정보를 콘솔에 출력합니다. \r\n//     이렇게 함으로써 서버는 어떤 클라이언트가 연결되었는지 확인할 수 있습니다.\r\n\r\n/* \r\n    function handelConnection(socket) {\r\n        console.log(socket);\r\n    } \r\n\r\n    wss.on(\"connection\", handelConnection);\r\n*/\r\n\r\n\r\n// wss.on(\"connection\", (socket) => {...}); : 이 부분은 wss WebSocket 서버에서 \"connection\" 이벤트가 발생했을 때, \r\n// 즉 클라이언트가 서버에 연결되었을 때 실행되는 콜백 함수를 설정하는 부분입니다. 연결된 클라이언트의 소켓 객체는 socket 파라미터로 전달됩니다.\r\n    // \"console.log(\"socket\", socket)\"는 \"socket\"라는 문자열과 socket 객체를 별개로 출력합니다. 이 방식을 사용하면 socket 객체의 내용을 자세히 볼 수 있습니다.\r\n    // \"console.log(\"socket\" + socket)\"는 \"socket\"라는 문자열과 socket 객체를 문자열 연결 연산자(+)를 사용하여 하나의 문자열로 만들어 출력합니다. \r\n    //     이 경우, socket 객체가 문자열로 변환되어 출력되므로, [object Object]와 같이 출력될 수 있습니다.\r\n    // 따라서, 객체의 내용을 자세히 보고 싶다면 \"console.log(\"socke\", socket)\" 방식을, 객체를 문자열과 함께 한 줄로 출력하고 싶다면 \"console.log(\"socke\" + socket)\" 방식을 사용하면 됩니다.\r\n    // sockets.push(socket): 새로 연결된 웹소켓을 sockets 배열에 추가합니다.\r\n    // console.log(\"브라우저와 연결되었습니다.\"); : 클라이언트와 연결이 성공하면 콘솔에 \"브라우저와 연결되었습니다.\"라는 메시지를 출력합니다.\r\n    // socket.on(\"close\", () => console.log(\"서버 > 서버와 연결이 끊겼습니다.\")); : 클라이언트와의 연결이 닫혔을 때 실행되는 콜백 함수를 설정합니다. \r\n    //     이 경우 연결이 닫히면 콘솔에 \"서버 > 서버와 연결이 끊겼습니다.\"라는 메시지를 출력합니다.\r\n    // socket.on(\"message\", (message) => {...}) : 클라이언트로부터 메시지를 받았을 때 실행되는 콜백 함수를 설정합니다. 이 경우 메시지를 받으면 받은 메시지를 콘솔에 출력합니다.\r\n        // const message = JSON.parse(msg): 클라이언트에서 보낸 메시지를 JSON형식으로 파싱합니다.\r\n        // console.log([서버] : ${message});: 이 코드는 서버 측에서 실행되며, 서버의 콘솔에 \"[서버] : \"라는 문자열과 함께 클라이언트로부터 받은 메시지를 출력합니다. \r\n        // 이는 주로 개발자가 서버에서 클라이언트로부터 어떤 메시지를 받았는지 확인하기 위해 사용됩니다.\r\n        // socket.send([서버] : ${message});: 이 코드는 서버가 클라이언트로 메시지를 보내는 코드입니다. \"[서버] : \"라는 문자열과 함께 클라이언트로부터 받은 메시지를 그대로 클라이언트에게 보냅니다. \r\n        // 이는 웹소켓을 통해 실시간으로 서버와 클라이언트 간의 데이터를 주고받는 데 사용됩니다.\r\n        // sockets.forEach(aSocket => aSocket.send(${message})): sockets 배열에 있는 모든 웹소켓에 메시지를 보냅니다. 이를 통해 서버는 받은 메시지를 모든 클라이언트에게 브로드캐스팅합니다.\r\n\r\n        // switch(message.type) {...} : message.type의 값에 따라 다른 코드 블록이 실행됩니다. message는 클라이언트에서 서버로 보낸 메시지를 JSON 형태로 파싱한 객체입니다.\r\n        // case \"new_message\": : 메시지의 타입이 \"new_message\"인 경우 다음 코드를 실행합니다.\r\n        // sockets.forEach(aSocket => aSocket.send(${socket.nickname}:${message.payload})); : 현재 연결된 모든 소켓에 메시지를 전송합니다. \r\n        // 메시지는 보낸 사람의 닉네임과 메시지 내용을 합쳐서 전송됩니다. 여기서 socket.nickname은 메시지를 보낸 사람의 닉네임이고, message.payload는 메시지 내용입니다.\r\n        // case \"nickname\": : 메시지의 타입이 \"nickname\"인 경우 다음 코드를 실행합니다.\r\n        // socket[\"nickname\"] = message.payload; : 메시지를 보낸 사람의 닉네임을 message.payload로 변경합니다.\r\n        // break; : switch 문을 빠져나옵니다. 이 키워드가 없으면, 해당 case 블록 이후의 코드도 실행됩니다.\r\n        // 즉, 클라이언트에서 메시지 타입이 \"new_message\"로 보내면, 해당 메시지를 서버에 연결된 모든 클라이언트에게 전송하고, \r\n        // 메시지 타입이 \"nickname\"인 경우, 메시지를 보낸 사람의 닉네임을 변경하는 작업을 수행합니다.\r\n   \r\n    // socket.send(\"안녕?\"); : 클라이언트와 연결이 성공하면 클라이언트에게 \"안녕?\" 메시지를 보냅니다. \r\n\r\n// server.listen(3000, handelListen); : HTTP 서버를 3000번 포트에서 시작하고, 리스닝을 시작하면 handelListen 함수를 호출합니다.\r\n\r\nconst sockets = [];\r\n\r\nwss.on(\"connection\", (socket) => {\r\n    console.log(\"socket\", socket);\r\n    console.log(\"socket\" + socket);\r\n    sockets.push(socket);\r\n    socket[\"nickname\"] = \"익명\"; \r\n    console.log(\"브라우저와 연결되었습니다.\");\r\n    socket.on(\"close\", () => console.log(\"서버 > 서버와 연결이 끊겼습니다.\"));\r\n    socket.on(\"message\", (msg) => { \r\n        const message = JSON.parse(msg);\r\n        console.log(message.type, message.payload); // 클라이언트에서 받은 JSON 타입의 key값을 받아서 value를 반환\r\n        // console.log(`[서버] : ${message}`); // 클라이언트에서 받은 메세지\r\n        // socket.send(`[서버] : ${message}`); // 클라이언트에서 받은 메세지를 클라이언트로 보내는 메시지\r\n        // sockets.forEach(aSocket => aSocket.send(`${message}`)); // 클라이언트에서 받은 메세지를 소켓에 연결된 모든 클라이언트로 보내는 메세지\r\n\r\n        switch(message.type) {\r\n            case \"new_message\":\r\n                // sockets.forEach(aSocket => aSocket.send(`${message.payload}`));\r\n                sockets.forEach(aSocket => aSocket.send(`${socket.nickname}:${message.payload}`));\r\n                break;\r\n            case \"nickname\":\r\n                socket[\"nickname\"] = message.payload\r\n                break;                \r\n        }\r\n    })\r\n    // socket.send(\"안녕?\"); // 클라이언트로 보내는 메세지\r\n});\r\n\r\nserver.listen(3000, handelListen);\r\n\r\n\r\n\r\nimport SocketIO from \"socket.io\"\r\n\r\nwsServer.on(\"connetction\", (socket) => {\r\n    console.log(socket);\r\n    socket.on(\"enter_room\", (roomName) => console.log(roomName));\r\n});\r\n\r\nconst httpServer = http.createServer(app);\r\nconst wsServer = SocketIO(httpServer);\r\n\r\nconst handelListen1 = () => console.log(\"listening on http://localhost:3000\");\r\nhttpServer.listen(3000, handelListen1);"],"mappings":"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"}},"mtime":1701219614793},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\MySource\\\\soom\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\MySource\\\\soom\",\"filename\":\"C:\\\\MySource\\\\soom\\\\src\\\\server1.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\MySource\\\\soom\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.3:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _http = _interopRequireDefault(require(\"http\"));\nvar _socket = _interopRequireWildcard(require(\"socket.io\"));\nvar _adminUi = require(\"@socket.io/admin-ui\");\nvar _express = _interopRequireDefault(require(\"express\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n// import SocketIO from \"socket.io\" : Socket.IO 모듈을 임포트합니다. 이 모듈은 웹소켓 통신을 가능하게 해줍니다.\n\nvar app = (0, _express[\"default\"])();\napp.set(\"view engine\", \"pug\");\napp.set(\"views\", __dirname + \"/views\");\napp.use(\"/public\", _express[\"default\"][\"static\"](__dirname + \"/public\"));\napp.get(\"/\", function (req, res) {\n  return res.render(\"home\");\n});\napp.get(\"/*\", function (req, res) {\n  return res.redirect(\"/\");\n});\n\n// const wsServer = SocketIO(httpServer); : 생성한 HTTP 서버 위에 웹소켓 서버를 생성합니다.\n// wsServer.on(\"connection\", (socket) => {...}); : 웹소켓 서버에 클라이언트가 연결되면 발생하는 'connection' 이벤트에 대한 핸들러를 등록합니다. \n// 이 핸들러는 클라이언트로부터의 각 연결에 대해 실행됩니다.\n\nvar httpServer = _http[\"default\"].createServer(app);\n// const wsServer = SocketIO(httpServer);\nvar wsServer = new _socket.Server(httpServer, {\n  cors: {\n    origin: [\"https://admin.socket.io\"],\n    credentials: true\n  }\n});\n(0, _adminUi.instrument)(wsServer, {\n  auth: false\n});\n\n// 이 부분은 ES6의 구조 분해 할당 문법을 사용하여 wsServer의 sockets.adapter 객체에서 sids와 rooms를 추출하는 코드입니다. \n// sids는 각 소켓이 어떤 방에 들어가 있는지를 나타내는 Map 객체이며, rooms는 각 방에 어떤 소켓이 들어가 있는지를 나타내는 Map 객체입니다.\n\n// rooms Map 객체의 각 요소에 대해 반복을 수행하며, 각 방에 대한 정보를 가져와 해당 방이 공개된 채팅방인지를 판단합니다. \n// 공개된 채팅방이라면 publicRooms 배열에 추가합니다. 여기서 공개된 채팅방이라 함은, 방 이름이 소켓 ID와 일치하지 않는 방을 말합니다. \n// 소켓 ID와 방 이름이 일치하는 경우는 소켓이 생성될 때 각 소켓에 대해 자동으로 생성되는 개인방을 말합니다.\n\n// JavaScript의 Map 객체를 순회할 때, forEach() 메소드는 각 요소에 대해 콜백 함수를 호출하며, 이 콜백 함수는 첫 번째 인자로 요소의 value, 두 번째 인자로 요소의 key를 받습니다.\n//     JavaScript의 Map.forEach() 메서드의 인자 순서는 (value, key, map)입니다. 이 메서드는 각 항목에 대해 주어진 콜백 함수를 실행하며, 이 콜백 함수는 세 개의 인자를 받습니다.\n//     즉, rooms.forEach((value, key) => {...})는 rooms Map 객체의 각 요소를 순회하면서 value와 key를 차례대로 가져오는 것입니다.\n//     여기서 value는 각 방에 있는 사용자의 집합(Set)을 나타내고, key는 방의 이름을 나타냅니다.\n//     따라서 rooms.forEach((value, key) => {...})가 올바른 표현입니다. rooms.forEach((key, value) => {...})로 작성하게 되면, \n//     key와 value의 순서가 바뀌어 원치 않는 결과를 가져올 수 있습니다.\n\n// 이 경우, value는 각 방에 있는 사용자의 집합(Set)을 나타내고, key는 방 이름을 나타냅니다.\n//     sids.get(key) === undefined는 해당 방이 공개 방인지 아닌지를 판별하는 조건입니다. 만약 sids.get(key)가 undefined라면, \n//     그 방은 공개 방(public room)이라는 것이므로 publicRooms 배열에 추가합니다.\n//     따라서 이 함수는 서버의 모든 방을 순회하면서 공개 방만을 찾아내는 역할을 합니다. 이를 위해 forEach() 메소드에 전달된 콜백 함수는 value, key 순서로 인자를 받습니다.\n\nfunction publicRooms() {\n  // const sids = wsServer.sockets.adapter.sids;\n  // const rooms = wsServer.sockets.adapter.rooms;\n\n  var _wsServer$sockets$ada = wsServer.sockets.adapter,\n    sids = _wsServer$sockets$ada.sids,\n    rooms = _wsServer$sockets$ada.rooms;\n  var publicRooms = [];\n  // rooms.forEach((value, key) => {\n  rooms.forEach(function (value, key) {\n    console.log(key, value, sids.get(key));\n    if (sids.get(key) === undefined) {\n      publicRooms.push(key);\n    }\n  });\n  return publicRooms;\n}\nfunction countRoom(roomName) {\n  var _wsServer$sockets$ada2;\n  return (_wsServer$sockets$ada2 = wsServer.sockets.adapter.rooms.get(roomName)) === null || _wsServer$sockets$ada2 === void 0 ? void 0 : _wsServer$sockets$ada2.size;\n}\n\n// socket.onAny((event) => {...})\n// 이 메소드는 socket에서 발생하는 모든 이벤트를 감지합니다. 이벤트가 발생하면 해당 이벤트의 이름(event)이 콜백 함수의 매개변수로 전달됩니다. \n//     콜백 함수 내부에서는 wsServer.sockets.adaptor와 발생한 이벤트의 이름을 콘솔에 출력하고 있습니다.\n// wsServer.sockets.adaptor는 Socket.IO 서버의 어댑터를 참조하는데, 어댑터는 Socket.IO 서버가 클라이언트와의 연결을 관리하는 방식을 결정합니다. \n//     기본적으로는 in-memory 어댑터가 사용되며, 이는 모든 연결 정보를 메모리에 저장합니다.\n\n// socket.on(\"enter_room\", (roomName,done) => {...}); : 클라이언트로부터 'enter_room' 이벤트가 오면 이를 처리하는 부분입니다. \n// 클라이언트가 보낸 roomName을 출력하고, 5초 후에 done 콜백 함수를 실행합니다.\n// console.log(socket.id); : 연결된 클라이언트의 고유 ID를 콘솔에 출력합니다. 이 ID는 서버가 클라이언트를 식별하는 데 사용됩니다.\n// console.log(socket.rooms); : 클라이언트가 현재 속해 있는 방의 목록을 콘솔에 출력합니다. 초기에는 클라이언트가 속해 있는 방이 없으므로 빈 객체가 출력됩니다.\n// socket.join(roomName); : 클라이언트를 'roomName'이라는 이름의 방에 추가합니다. 이 방은 클라이언트가 메시지를 주고받을 수 있는 공간입니다.\n// console.log(socket.rooms); : 클라이언트가 현재 속해 있는 방의 목록을 다시 콘솔에 출력합니다. 이번에는 방에 추가된 후의 상태를 확인할 수 있습니다.\n\n// socket.on(\"disconnecting\", () => {...}); : 클라이언트의 웹소켓 연결이 끊어질 때 실행되는 이벤트 핸들러입니다. \n//     이 핸들러는 클라이언트가 모든 방에서 나가기 전에 실행됩니다. \n// 여기서 'socket.rooms'는 클라이언트가 현재 속해 있는 방의 목록을 가리킵니다. \n// 클라이언트가 속한 모든 방에 대해 'bye' 이벤트를 보냅니다. 이를 통해 다른 클라이언트들에게 해당 클라이언트가 방에서 나갔음을 알립니다.\n\n// socket.on(\"disconnecting\", () => {...}) : \"disconnecting\" 이벤트는 클라이언트가 서버에서 연결이 끊어지기 직전에 발생합니다. \n//     이 시점에는 클라이언트가 아직 종료되지 않았으며, 클라이언트의 상태 정보(예: 방 정보)는 여전히 유효합니다. \n//     따라서 이 코드에서는 클라이언트가 속해 있던 모든 방에 'bye' 이벤트를 보내어, 다른 클라이언트들에게 이 클라이언트가 연결을 종료하려고 하고 있다는 사실을 알립니다.\n\n// socket.on(\"disconnect\", () => {...}) : \"disconnect\" 이벤트는 클라이언트의 연결이 완전히 끊어진 후에 발생합니다. \n//     이 시점에서는 클라이언트의 상태 정보가 더 이상 유효하지 않습니다. 따라서 이 코드에서는 공개된 채팅방 목록이 변경될 수 있음을 감지하고, \n//     변경된 목록을 모든 클라이언트에게 'room_change' 이벤트로 보내어 각 클라이언트의 방 목록을 최신 상태로 유지하도록 합니다.\n\n// socket.on(\"new_message\", (msg, room, done) => {...}); : 클라이언트로부터 'new_message' 이벤트를 받았을 때 실행되는 이벤트 핸들러입니다. \n//     'msg'는 클라이언트가 보낸 메시지, 'room'은 메시지를 보낸 방의 이름, 'done'은 클라이언트가 전달한 콜백 함수입니다. \n// 이 핸들러는 클라이언트가 보낸 메시지를 해당 방의 다른 클라이언트들에게 전송하고, 처리가 끝났음을 클라이언트에 알립니다.\n// socket.to(room).emit(\"new_message\", ${socket.nickname} : ${msg});\n// 이 코드는 socket이 특정 방(room)에 있는 모든 클라이언트에게 \"new_message\" 이벤트를 보내는 역할을 합니다. \n//      이때, 보내는 메시지는 클라이언트의 별명과 클라이언트가 보낸 메시지를 합친 문자열입니다.\n// 그러나, 이 코드는 메시지를 보낸 클라이언트 자신을 제외한 클라이언트에게만 메시지를 보냅니다. \n\n// wsServer.in(room).emit(\"new_message\", ${socket.nickname} : ${msg});\n// 이 코드는 서버가 특정 방(room)에 있는 모든 클라이언트에게 \"new_message\" 이벤트를 보내는 역할을 합니다. \n//     이때, 보내는 메시지는 클라이언트의 별명과 클라이언트가 보낸 메시지를 합친 문자열입니다.\n// 이 코드를 사용하면 메시지를 보낸 클라이언트 자신도 이 이벤트를 받을 수 있습니다.\n\nwsServer.on(\"connection\", function (socket) {\n  // console.log(socket);\n  // socket.on(\"enter_room\", (roomName) => console.log(roomName));\n  socket[\"nickname\"] = \"익명\";\n  wsServer.sockets.emit(\"hello\", publicRooms());\n  socket.onAny(function (event) {\n    console.log(wsServer.sockets.adapter);\n    console.log(\"Socket Event : \".concat(event));\n  });\n  socket.on(\"enter_room\", function (roomName, done) {\n    done();\n    // setTimeout(() => {\n    //     done();\n    // }, 5000)\n    // console.log(roomName);\n    // console.log(socket.id);\n    // console.log(socket.rooms);\n    socket.join(roomName);\n    // console.log(socket.rooms);\n    socket.to(roomName).emit(\"welcome\", socket.nickname, countRoom(roomName)); // 사용자의 방에 입장할 때\n    wsServer.sockets.emit(\"room_change\", publicRooms()); // 사용자에게 room_change 이름으로 publicRooms(공용 룸) 배열을 전달\n  });\n\n  socket.on(\"disconnecting\", function () {\n    // 사용자가 탈퇴해서 모든 방이 나가질 때 // \"disconnecting\" 이벤트는 클라이언트가 서버에서 연결이 끊어지기 직전에 발생합니다.\n    // console.log(socket.rooms);\n    socket.rooms.forEach(function (room) {\n      return socket.to(room).emit(\"bye\", socket.nickname, countRoom(room) - 1);\n    });\n  });\n  socket.on(\"disconnect\", function () {\n    // \"disconnect\" 이벤트는 클라이언트의 연결이 완전히 끊어진 후에 발생합니다.\n    wsServer.sockets.emit(\"room_change\", publicRooms());\n  });\n  socket.on(\"new_message\", function (msg, room, done) {\n    // socket.to(room).emit(\"new_message\", msg);\n    socket.to(room).emit(\"new_message\", \"\".concat(socket.nickname, \" : \").concat(msg));\n    // wsServer.in(room).emit(\"new_message\", `${socket.nickname} : ${msg}`); // 해당 방의 모든 클라이언트에게 메시지 보내기\n    done();\n  });\n  socket.on(\"nickname\", function (nickname) {\n    return socket[\"nickname\"] = nickname;\n  });\n});\nvar handelListen = function handelListen() {\n  return console.log(\"listening on http://localhost:3000\");\n};\nhttpServer.listen(3000, handelListen);\n\n// 해당 방에서 나 뺴고 메세지 보내지는 이유?\n// key, value 위치 바뀌는 이유?\n// 바로 방이 안뜨는 이유?\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_http","_interopRequireDefault","require","_socket","_interopRequireWildcard","_adminUi","_express","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","app","express","__dirname","use","req","res","render","redirect","httpServer","http","createServer","wsServer","Server","cors","origin","credentials","instrument","auth","publicRooms","_wsServer$sockets$ada","sockets","adapter","sids","rooms","forEach","value","key","console","log","undefined","push","countRoom","roomName","_wsServer$sockets$ada2","size","on","socket","emit","onAny","event","concat","done","join","to","nickname","room","msg","handelListen","listen"],"sourceRoot":"C:\\MySource\\soom\\src\\","sources":["server1.js"],"sourcesContent":["// import SocketIO from \"socket.io\" : Socket.IO 모듈을 임포트합니다. 이 모듈은 웹소켓 통신을 가능하게 해줍니다.\r\n\r\nimport http from \"http\";\r\nimport SocketIO from \"socket.io\";\r\nimport { Server } from \"socket.io\";\r\nimport { instrument } from \"@socket.io/admin-ui\";\r\nimport express from 'express';\r\n\r\nconst app = express();\r\n\r\napp.set(\"view engine\", \"pug\");\r\napp.set(\"views\", __dirname + \"/views\");\r\napp.use(\"/public\", express.static(__dirname + \"/public\"));\r\napp.get(\"/\", (req,res) => res.render(\"home\"));\r\napp.get(\"/*\", (req,res) => res.redirect(\"/\"));\r\n\r\n// const wsServer = SocketIO(httpServer); : 생성한 HTTP 서버 위에 웹소켓 서버를 생성합니다.\r\n// wsServer.on(\"connection\", (socket) => {...}); : 웹소켓 서버에 클라이언트가 연결되면 발생하는 'connection' 이벤트에 대한 핸들러를 등록합니다. \r\n// 이 핸들러는 클라이언트로부터의 각 연결에 대해 실행됩니다.\r\n\r\nconst httpServer = http.createServer(app);\r\n// const wsServer = SocketIO(httpServer);\r\nconst wsServer = new Server(httpServer, {\r\n    cors: {\r\n        origin : [\"https://admin.socket.io\"],\r\n        credentials: true\r\n    }\r\n});\r\n\r\ninstrument(wsServer, {\r\n    auth: false\r\n});\r\n\r\n    // 이 부분은 ES6의 구조 분해 할당 문법을 사용하여 wsServer의 sockets.adapter 객체에서 sids와 rooms를 추출하는 코드입니다. \r\n    // sids는 각 소켓이 어떤 방에 들어가 있는지를 나타내는 Map 객체이며, rooms는 각 방에 어떤 소켓이 들어가 있는지를 나타내는 Map 객체입니다.\r\n\r\n    // rooms Map 객체의 각 요소에 대해 반복을 수행하며, 각 방에 대한 정보를 가져와 해당 방이 공개된 채팅방인지를 판단합니다. \r\n    // 공개된 채팅방이라면 publicRooms 배열에 추가합니다. 여기서 공개된 채팅방이라 함은, 방 이름이 소켓 ID와 일치하지 않는 방을 말합니다. \r\n    // 소켓 ID와 방 이름이 일치하는 경우는 소켓이 생성될 때 각 소켓에 대해 자동으로 생성되는 개인방을 말합니다.\r\n\r\n    // JavaScript의 Map 객체를 순회할 때, forEach() 메소드는 각 요소에 대해 콜백 함수를 호출하며, 이 콜백 함수는 첫 번째 인자로 요소의 value, 두 번째 인자로 요소의 key를 받습니다.\r\n    //     JavaScript의 Map.forEach() 메서드의 인자 순서는 (value, key, map)입니다. 이 메서드는 각 항목에 대해 주어진 콜백 함수를 실행하며, 이 콜백 함수는 세 개의 인자를 받습니다.\r\n    //     즉, rooms.forEach((value, key) => {...})는 rooms Map 객체의 각 요소를 순회하면서 value와 key를 차례대로 가져오는 것입니다.\r\n    //     여기서 value는 각 방에 있는 사용자의 집합(Set)을 나타내고, key는 방의 이름을 나타냅니다.\r\n    //     따라서 rooms.forEach((value, key) => {...})가 올바른 표현입니다. rooms.forEach((key, value) => {...})로 작성하게 되면, \r\n    //     key와 value의 순서가 바뀌어 원치 않는 결과를 가져올 수 있습니다.\r\n\r\n        // 이 경우, value는 각 방에 있는 사용자의 집합(Set)을 나타내고, key는 방 이름을 나타냅니다.\r\n        //     sids.get(key) === undefined는 해당 방이 공개 방인지 아닌지를 판별하는 조건입니다. 만약 sids.get(key)가 undefined라면, \r\n        //     그 방은 공개 방(public room)이라는 것이므로 publicRooms 배열에 추가합니다.\r\n        //     따라서 이 함수는 서버의 모든 방을 순회하면서 공개 방만을 찾아내는 역할을 합니다. 이를 위해 forEach() 메소드에 전달된 콜백 함수는 value, key 순서로 인자를 받습니다.\r\n    \r\nfunction publicRooms() {\r\n    // const sids = wsServer.sockets.adapter.sids;\r\n    // const rooms = wsServer.sockets.adapter.rooms;\r\n\r\n    const {\r\n        sockets: {\r\n            adapter:{sids, rooms},\r\n        },\r\n    } = wsServer;\r\n\r\n    const publicRooms = []\r\n    // rooms.forEach((value, key) => {\r\n    rooms.forEach((value, key) => {\r\n        console.log(key, value, sids.get(key))\r\n        if (sids.get(key) === undefined) {\r\n            publicRooms.push(key);\r\n        }\r\n    });\r\n    \r\n    return publicRooms;\r\n}\r\n\r\nfunction countRoom(roomName) {\r\n    return wsServer.sockets.adapter.rooms.get(roomName)?.size;\r\n}\r\n\r\n    // socket.onAny((event) => {...})\r\n    // 이 메소드는 socket에서 발생하는 모든 이벤트를 감지합니다. 이벤트가 발생하면 해당 이벤트의 이름(event)이 콜백 함수의 매개변수로 전달됩니다. \r\n    //     콜백 함수 내부에서는 wsServer.sockets.adaptor와 발생한 이벤트의 이름을 콘솔에 출력하고 있습니다.\r\n    // wsServer.sockets.adaptor는 Socket.IO 서버의 어댑터를 참조하는데, 어댑터는 Socket.IO 서버가 클라이언트와의 연결을 관리하는 방식을 결정합니다. \r\n    //     기본적으로는 in-memory 어댑터가 사용되며, 이는 모든 연결 정보를 메모리에 저장합니다.\r\n\r\n    // socket.on(\"enter_room\", (roomName,done) => {...}); : 클라이언트로부터 'enter_room' 이벤트가 오면 이를 처리하는 부분입니다. \r\n    // 클라이언트가 보낸 roomName을 출력하고, 5초 후에 done 콜백 함수를 실행합니다.\r\n        // console.log(socket.id); : 연결된 클라이언트의 고유 ID를 콘솔에 출력합니다. 이 ID는 서버가 클라이언트를 식별하는 데 사용됩니다.\r\n        // console.log(socket.rooms); : 클라이언트가 현재 속해 있는 방의 목록을 콘솔에 출력합니다. 초기에는 클라이언트가 속해 있는 방이 없으므로 빈 객체가 출력됩니다.\r\n        // socket.join(roomName); : 클라이언트를 'roomName'이라는 이름의 방에 추가합니다. 이 방은 클라이언트가 메시지를 주고받을 수 있는 공간입니다.\r\n        // console.log(socket.rooms); : 클라이언트가 현재 속해 있는 방의 목록을 다시 콘솔에 출력합니다. 이번에는 방에 추가된 후의 상태를 확인할 수 있습니다.\r\n\r\n    // socket.on(\"disconnecting\", () => {...}); : 클라이언트의 웹소켓 연결이 끊어질 때 실행되는 이벤트 핸들러입니다. \r\n    //     이 핸들러는 클라이언트가 모든 방에서 나가기 전에 실행됩니다. \r\n        // 여기서 'socket.rooms'는 클라이언트가 현재 속해 있는 방의 목록을 가리킵니다. \r\n        // 클라이언트가 속한 모든 방에 대해 'bye' 이벤트를 보냅니다. 이를 통해 다른 클라이언트들에게 해당 클라이언트가 방에서 나갔음을 알립니다.\r\n\r\n    // socket.on(\"disconnecting\", () => {...}) : \"disconnecting\" 이벤트는 클라이언트가 서버에서 연결이 끊어지기 직전에 발생합니다. \r\n    //     이 시점에는 클라이언트가 아직 종료되지 않았으며, 클라이언트의 상태 정보(예: 방 정보)는 여전히 유효합니다. \r\n    //     따라서 이 코드에서는 클라이언트가 속해 있던 모든 방에 'bye' 이벤트를 보내어, 다른 클라이언트들에게 이 클라이언트가 연결을 종료하려고 하고 있다는 사실을 알립니다.\r\n\r\n    // socket.on(\"disconnect\", () => {...}) : \"disconnect\" 이벤트는 클라이언트의 연결이 완전히 끊어진 후에 발생합니다. \r\n    //     이 시점에서는 클라이언트의 상태 정보가 더 이상 유효하지 않습니다. 따라서 이 코드에서는 공개된 채팅방 목록이 변경될 수 있음을 감지하고, \r\n    //     변경된 목록을 모든 클라이언트에게 'room_change' 이벤트로 보내어 각 클라이언트의 방 목록을 최신 상태로 유지하도록 합니다.\r\n\r\n    // socket.on(\"new_message\", (msg, room, done) => {...}); : 클라이언트로부터 'new_message' 이벤트를 받았을 때 실행되는 이벤트 핸들러입니다. \r\n    //     'msg'는 클라이언트가 보낸 메시지, 'room'은 메시지를 보낸 방의 이름, 'done'은 클라이언트가 전달한 콜백 함수입니다. \r\n    // 이 핸들러는 클라이언트가 보낸 메시지를 해당 방의 다른 클라이언트들에게 전송하고, 처리가 끝났음을 클라이언트에 알립니다.\r\n        // socket.to(room).emit(\"new_message\", ${socket.nickname} : ${msg});\r\n        // 이 코드는 socket이 특정 방(room)에 있는 모든 클라이언트에게 \"new_message\" 이벤트를 보내는 역할을 합니다. \r\n        //      이때, 보내는 메시지는 클라이언트의 별명과 클라이언트가 보낸 메시지를 합친 문자열입니다.\r\n        // 그러나, 이 코드는 메시지를 보낸 클라이언트 자신을 제외한 클라이언트에게만 메시지를 보냅니다. \r\n\r\n        // wsServer.in(room).emit(\"new_message\", ${socket.nickname} : ${msg});\r\n        // 이 코드는 서버가 특정 방(room)에 있는 모든 클라이언트에게 \"new_message\" 이벤트를 보내는 역할을 합니다. \r\n        //     이때, 보내는 메시지는 클라이언트의 별명과 클라이언트가 보낸 메시지를 합친 문자열입니다.\r\n        // 이 코드를 사용하면 메시지를 보낸 클라이언트 자신도 이 이벤트를 받을 수 있습니다.\r\n\r\nwsServer.on(\"connection\", (socket) => {\r\n    // console.log(socket);\r\n    // socket.on(\"enter_room\", (roomName) => console.log(roomName));\r\n    socket[\"nickname\"] = \"익명\";\r\n\r\n    wsServer.sockets.emit(\"hello\", publicRooms());\r\n\r\n    socket.onAny((event) => {\r\n        console.log(wsServer.sockets.adapter);\r\n        console.log(`Socket Event : ${event}`);\r\n    });\r\n\r\n    socket.on(\"enter_room\", (roomName,done) => {\r\n        done();\r\n        // setTimeout(() => {\r\n        //     done();\r\n        // }, 5000)\r\n        // console.log(roomName);\r\n        // console.log(socket.id);\r\n        // console.log(socket.rooms);\r\n        socket.join(roomName);\r\n        // console.log(socket.rooms);\r\n        socket.to(roomName).emit(\"welcome\", socket.nickname, countRoom(roomName)); // 사용자의 방에 입장할 때\r\n        wsServer.sockets.emit(\"room_change\", publicRooms()); // 사용자에게 room_change 이름으로 publicRooms(공용 룸) 배열을 전달\r\n    });\r\n\r\n    socket.on(\"disconnecting\", () => { // 사용자가 탈퇴해서 모든 방이 나가질 때 // \"disconnecting\" 이벤트는 클라이언트가 서버에서 연결이 끊어지기 직전에 발생합니다.\r\n        // console.log(socket.rooms);\r\n        socket.rooms.forEach(room => socket.to(room).emit(\"bye\", socket.nickname, countRoom(room)-1));\r\n    });\r\n\r\n    socket.on(\"disconnect\", () => { // \"disconnect\" 이벤트는 클라이언트의 연결이 완전히 끊어진 후에 발생합니다.\r\n        wsServer.sockets.emit(\"room_change\", publicRooms());\r\n    })\r\n\r\n    socket.on(\"new_message\", (msg, room, done) => {\r\n        // socket.to(room).emit(\"new_message\", msg);\r\n        socket.to(room).emit(\"new_message\", `${socket.nickname} : ${msg}`);\r\n        // wsServer.in(room).emit(\"new_message\", `${socket.nickname} : ${msg}`); // 해당 방의 모든 클라이언트에게 메시지 보내기\r\n        done();\r\n    });\r\n\r\n    socket.on(\"nickname\", (nickname) => (socket[\"nickname\"] = nickname));\r\n});\r\n\r\nconst handelListen = () => console.log(\"listening on http://localhost:3000\");\r\nhttpServer.listen(3000, handelListen);\r\n\r\n// 해당 방에서 나 뺴고 메세지 보내지는 이유?\r\n// key, value 위치 바뀌는 이유?\r\n// 바로 방이 안뜨는 이유?"],"mappings":"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"}},"mtime":1701244586053}}